/////////////////////////////////////////////////////////////////////////////
// capture.h
/////////////////////////////////////////////////////////////////////////////

#ifndef CAPTURE_H_
#define CAPTURE_H_

/////////////////////////////////////////////////////////////////////////////
// Definitions
/////////////////////////////////////////////////////////////////////////////

#define ADC_BUFFER_SIZE         255
#define ADC_BUFFER_SEG          SI_SEG_PDATA

/////////////////////////////////////////////////////////////////////////////
// Enumerations
/////////////////////////////////////////////////////////////////////////////

typedef enum LEVEL_THR
{
    LEVEL_THR_LT,
    LEVEL_THR_GT
} LEVEL_THR;

typedef enum TRIGGER_SLOPE
{
    TRIGGER_SLOPE_RISING,
    TRIGGER_SLOPE_FALLING,
    TRIGGER_SLOPE_COUNT
} TRIGGER_SLOPE;

/////////////////////////////////////////////////////////////////////////////
// Global Variables
/////////////////////////////////////////////////////////////////////////////

extern SI_SEGMENT_VARIABLE(AdcSamples[ADC_BUFFER_SIZE], uint8_t, ADC_BUFFER_SEG);
extern volatile TRIGGER_SLOPE TriggerSlope;
extern uint16_t TriggerLevel;

/////////////////////////////////////////////////////////////////////////////
// Prototypes
/////////////////////////////////////////////////////////////////////////////

bool IsCaptureInProgress();
void TriggerCapture();
void ForceCapture();
void AbortCapture();

#endif // CAPTURE_H_

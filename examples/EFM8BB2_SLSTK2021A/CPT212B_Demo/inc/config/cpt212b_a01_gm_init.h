// This file is generated by Xpress Configurator, and will be overwritten when
// saving your Xpress Configurator project!

#ifndef __CPT212B_A01_GM_INIT_H__
#define __CPT212B_A01_GM_INIT_H__


// Define Endian-ness:
// Big Endian Compilers: No swapping necessary
#if ((defined __C51__) || (defined __RC51__) || (defined _CC51))
#define htobe16(x) (x)

// Little Endian Compilers: Bit swapping necessary
#elif ((defined SDCC) || (defined HI_TECH_C) || (defined __ICC8051__))
#define htobe16(x) (((x) >> 8) | ((x) << 8))

#else
#error "Compiler not defined. Endian-ness of the compiler cannot be determined, and is necessary for CPT2xxx device configuration."
#endif

typedef struct
{                                       //  Min-Max |  Default
  uint8_t reserved_0[3];                //      0-0 |       0
  uint8_t active_threshold[12];         //    1-100 |      70
  uint8_t inactive_threshold[12];       //    1-100 |      50
  uint8_t average_touch_delta[12];      //    1-255 |      44
  uint8_t accumulation[12];             //      0-5 |       2
  uint8_t gain[12];                     //      0-7 |       7
  uint16_t active_mode_period;          //   1-5000 |      10
  uint16_t sleep_mode_period;           //   1-5000 |     200
  uint8_t button_debounce;              //     1-15 |       3
  uint8_t active_mode_mask[2];          //      0-1 |       0
  uint8_t sleep_mode_mask[2];           //      0-1 |       0
  uint8_t counts_before_sleep;          //    2-255 |     100
  uint8_t active_mode_scan_type;        //      0-1 |       0
  uint8_t reserved_1[4];                //      0-0 |       0
  uint8_t buzzer_output_duration;       //    0-255 |       0
  uint8_t buzzer_output_frequency;      //    0-100 |     100
  uint8_t buzzer_drive_strength;        //      0-1 |       1
  uint8_t touch_time_duration;          //     0-14 |       0
  uint8_t mutex_buttons;                //      0-1 |       0
  uint8_t prox_settings;                //     0-15 |       0
  uint8_t i2c_slave_address;            //    0-255 |     224
  uint8_t reserved_2;                   //      0-0 |       0
  uint8_t i2c_timeout_duration;         //     0-15 |       1
  uint8_t cs00_sensor_string[10];       //          |  "CS00"
  uint8_t cs01_sensor_string[10];       //          |  "CS01"
  uint8_t cs02_sensor_string[10];       //          |  "CS02"
  uint8_t cs03_sensor_string[10];       //          |  "CS03"
  uint8_t cs04_sensor_string[10];       //          |  "CS04"
  uint8_t cs05_sensor_string[10];       //          |  "CS05"
  uint8_t cs06_sensor_string[10];       //          |  "CS06"
  uint8_t cs07_sensor_string[10];       //          |  "CS07"
  uint8_t cs08_sensor_string[10];       //          |  "CS08"
  uint8_t cs09_sensor_string[10];       //          |  "CS09"
  uint8_t cs10_sensor_string[10];       //          |  "CS10"
  uint8_t cs11_sensor_string[10];       //          |  "CS11"
} config_profile_t;


// This structure must be transmitted to the CPT device in Big-endian format!
#define CPT212B_A01_GM_DEFAULT_CONFIG \
{ \
  {0x00, 0x00, 0x00},                                                              /* reserved_0 */ \
  {0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C},        /* Active Threshold */ \
  {0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28},        /* Inactive Threshold */ \
  {0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B, 0x2B},        /* Average Touch Delta */ \
  {0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02},        /* Accumulation */ \
  {0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06},        /* Gain */ \
  htobe16(0x0014),                                                                 /* active mode period */ \
  htobe16(0x00C8),                                                                 /* sleep mode period */ \
  0x02,                                                                            /* button debounce */ \
  {0xFF, 0x07},                                                                    /* active mode mask */ \
  {0xFF, 0x07},                                                                    /* sleep mode mask */ \
  0x64,                                                                            /* counts before sleep */ \
  0x01,                                                                            /* active mode scan type */ \
  {0x00, 0x00, 0x00, 0x00},                                                        /* reserved_1 */ \
  0x04,                                                                            /* buzzer output duration */ \
  0x64,                                                                            /* buzzer output frequency */ \
  0x01,                                                                            /* buzzer drive strength */ \
  0x00,                                                                            /* touch time duration */ \
  0x00,                                                                            /* mutex buttons */ \
  0x00,                                                                            /* prox settings */ \
  0xF0,                                                                            /* I2C slave address */ \
  0x00,                                                                            /* reserved_2 */ \
  0x01,                                                                            /* I2C timeout duration */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS00 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS01 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS02 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS03 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS04 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS05 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS06 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS07 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS08 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS09 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS10 sensor string */ \
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},  /* CS11 sensor string */ \
}

#define CPT212B_A01_GM_DEFAULT_CONFIG_CHECKSUM (0x99C3)

#endif // CPT212B_A01_GM_INIT_H__
